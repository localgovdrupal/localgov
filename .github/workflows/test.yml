name: Test LocalGov Drupal

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Install LocalGov Drupal
    runs-on: ubuntu-latest
    container:
      image: localgovdrupal/apache-php:php7.4
      
    steps:

      - name: Cached workspace
        uses: actions/cache@v2
        with:
          path: ./html
          key: ${{ runner.os }}-localgov-build-${{ github.run_id }}

      - name: Clone drupal_container
        uses: actions/checkout@v2
        with:
          repository: localgovdrupal/drupal-container
          ref: master

      - name: Create LocalGov Drupal project
        run: composer create-project --stability dev localgovdrupal/localgov-project html

      - name: Setup package source for the test target
        run: |
          composer --working-dir=html config repositories.1 vcs git@github.com:${{ github.repository }}.git
          composer global config github-oauth.github.com ${{ github.token }}

      - name: Extract Git branch name outside of a pull request
        if: github.event_name != 'pull_request'
        run: echo "GIT_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Extract Git branch name from a pull request
        if: github.event_name == 'pull_request'
        run: echo "GIT_BRANCH=${GITHUB_HEAD_REF}" >> $GITHUB_ENV

      - name: Grab test target
        run: composer --working-dir=html require ${{ github.repository }}:"dev-${GIT_BRANCH} as 1.0.x-dev"

  phpcs:
    name: Coding standards checks
    needs: build
    runs-on: ubuntu-latest
    container:
      image: localgovdrupal/apache-php:php7.4
      
    steps:

      - name: Cached workspace
        uses: actions/cache@v2
        with:
          path: ./html
          key: ${{ runner.os }}-localgov-build-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-localgov-build-

      - name: Run coding standards checks
        run: |
          cd html
          ./bin/phpcs -p

  phpstan:
    name: Deprecated code checks
    needs: build
    runs-on: ubuntu-latest
    container:
      image: localgovdrupal/apache-php:php7.4

    steps:

      - name: Cached workspace
        uses: actions/cache@v2
        with:
          path: ./html
          key: ${{ runner.os }}-localgov-build-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-localgov-build-

      - name: Run deprecated code checks
        run: |
          cd html
          ./bin/phpstan analyse -c ./phpstan.neon ./web/profiles/contrib/localgov/ ./web/modules/contrib/localgov_*

  phpunit:
    name: PHPUnit tests
    needs: build
    runs-on: ubuntu-latest
    container:
      image: localgovdrupal/apache-php:php7.4
    
    services:
        chromedriver:
          image: drupalci/webdriver-chromedriver:production
          ports:
            - 4444:4444
            - 9515:9515
          #options: >-
          #  --entrypoint 'chromedriver --log-path=/tmp/chromedriver.log --verbose --whitelisted-ips='

    steps:

      - name: Cached workspace
        uses: actions/cache@v2
        with:
          path: ./html
          key: ${{ runner.os }}-localgov-build-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-localgov-build-

#       - name: Start Docker environment
#         run: docker-compose up

      - name: Run PHPUnit tests
        env:
          MINK_DRIVER_ARGS_WEBDRIVER: '["chromedriver", {"browserName":"chrome","chromeOptions":{"args":["--disable-gpu","--headless", "--no-sandbox", "--disable-dev-shm-usage"]}}, "http://chromedriver:9515"]'
          SYMFONY_DEPRECATIONS_HELPER: weak
        run: |
          sed -i "s#/var/www/html/web#$GITHUB_WORKSPACE/html/web#" /etc/apache2/sites-available/vhost.conf
          sed -i "s#www-data#docker#" /etc/apache2/envvars
          service apache2 start
          chown -R docker:docker html
          cd html
          mkdir -p web/sites/simpletest
          chmod 777 web/sites/simpletest
          sed -i "s#http://localgov.lndo.site#http://localhost#; s#mysql://database:database@database/database#sqlite://localhost//dev/shm/test.sqlite#" phpunit.xml.dist
          apt-get update && apt-get install sudo --yes
          sudo -E -u docker ./bin/phpunit --testdox
          #./bin/paratest --processes=4 --verbose=1
